[project]
dynamic = ["version"]
name = "boiling-learning"
description = "Deep learning models for phase-change quantification and classification"
authors = [{name = "Ruan Comelli", email = "ruancomelli@gmail.com"}]
license = "GPL-3.0-only"
license-files = ["LICENSE"]
readme = "README.md"
keywords = [
    "automated-machine-learning",
    "automl",
    "deep-learning",
    "machine-learning",
    "phase-change",
    "python",
    "tensorflow"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Manufacturing",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Physics"
]
requires-python = "==3.10.*"
dependencies = [
    "tensorflow==2.10.*",
    "tensorflow-addons==0.19.*",
    "typing-extensions>=4.3.0",
    "frozendict==2.3.*",
    "funcy>=2.0",
    "more-itertools>=9.0.0",
    "numpy==1.24.*",
    "parse==1.19.*",
    "pint==0.22",
    "scikit-image==0.20.*",
    "classes==0.4.*",
    "iteround>=1.0.3",
    "loguru>=0.6.0",
    "decord==0.6.*",
    "keras-tuner==1.1.3",
    "autokeras==1.0.20",
    "matplotlib==3.7.1",
    "seaborn[stats]==0.12.2",
    "imageio[ffmpeg]==2.30.*",
    "pillow==10.3.*",
    "rich>=12.6.0",
    "typer[all]==0.9.*",
    "pandera==0.19.*",
    "ffmpeg-python==0.2.*",
    "scipy==1.10.*",
    "pandas==2.0.*",
    "h5py==3.8.*",
    "uncertainties==3.1.*",
    "pyyaml==6.*"
]

[project.urls]
homepage = "https://github.com/ruancomelli/boiling-learning"
issues = "https://github.com/ruancomelli/boiling-learning/issues"
repository = "https://github.com/ruancomelli/boiling-learning.git"
documentation = "https://github.com/ruancomelli/boiling_learning/blob/main/README.md"
changelog = "https://github.com/ruancomelli/boiling_learning/blob/main/CHANGELOG.md"

[dependency-groups]
ci = ["commitizen>=2.29.5", "pre-commit>=2.20.0"]
format = ["ruff>=0.9.7"]
lint = ["ruff>=0.9.7"]
test = ["pytest>=8.3.4"]
test-cov = ["pytest>=8.3.4", "pytest-cov>=6.0.0"]
typecheck = [
    "mypy>=1.15.0",
    "types-decorator>=5.1.8",
    "types-PyYAML>=6.0.11"
]
vulture = ["vulture>=2.7"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch]
version.path = "boiling_learning/__init__.py"
build.targets.wheel.packages = ["boiling_learning"]

[tool.mypy]
follow_imports = "normal"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
plugins = [
    # "classes.contrib.mypy.classes_plugin",
    "numpy.typing.mypy_plugin"
]

[tool.commitizen]
tag_format = "v$major.$minor.$patch$prerelease"
update_changelog_on_bump = true
version = "0.39.0"
version_files = ["pyproject.toml:version"]
bump_message = "chore: release $new_version"

[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = ["boiling_learning", "tests"]

[tool.ruff.lint]
select = [
    "D",  # pydocstyle
    "F",  # pyflakes
    "I",  # isort
    "PL",  # pylint
    "RUF100",  # unused-noqa-directive
    "UP"  # pyupgrade
]
ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D203",  # incorrect-blank-line-before-class
    "D213",  # multi-line-summary-second-line
    "D413",  # Missing blank line after last section
    "PLR0912",  # Too many branches
    "PLR0913"  # Too many arguments in function definition
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401"  # Unused imports
]
"tests/**/*.py" = [
    "D",  # Documentation
    "PLR2004"  # Magic value used in comparison
]

[tool.ruff.lint.pydocstyle]
ignore-decorators = ["typing.overload"]
